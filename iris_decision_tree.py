# -*- coding: utf-8 -*-
"""assignment dibimbing decision tree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kJwNOAvZXSG-rJoK6F21TLWVzVtlU1_O

# 1. Import Library

# 2. Read Dataset
"""

import pandas as pd
from sklearn import datasets #import dataset dari scikit learn

iris = datasets.load_iris()

x = iris.data #input
y = iris.target #output

#konversi data fitur dan target jadi dataframe
df_x = pd.DataFrame(x, columns=iris.feature_names)
df_y = pd.Series(y, name='target')

df_x

df_y

#gabung x dan y di satu dataframe
df = pd.concat([df_x, df_y], axis = 1)
df

df.info()

df['target'].unique()

df.describe()

"""# 3. Split Data"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(df_x, df_y, test_size=0.2, random_state=39)

"""# 4. Train the Model"""

from sklearn.tree import DecisionTreeClassifier

model = DecisionTreeClassifier(random_state=42)
model.fit(x_train, y_train)

"""# 5. Predict & Evaluate"""

from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

y_pred = model.predict(x_test)

accuracy = accuracy_score(y_test, y_pred)

print("Laporan Klasifikasi")
print(f"Akurasi: {accuracy * 100: .2f}%")

import seaborn as sns
import matplotlib.pyplot as plt

cm = confusion_matrix(y_test, y_pred)

plt.figure(figsize=(8,6))
sns.heatmap(cm, annot=True, fmt ="d", cmap="Blues",
            xticklabels=iris.target_names, yticklabels=iris.target_names)

plt.xlabel("Prediksi")
plt.ylabel("Aktual")
plt.title("Confusion Matrix")
plt.show

from sklearn.metrics import accuracy_score, classification_report

print(classification_report(y_test, y_pred, target_names=iris.target_names))